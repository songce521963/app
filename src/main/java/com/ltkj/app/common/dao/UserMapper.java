package com.ltkj.app.common.dao;

import com.ltkj.app.common.model.User;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;

public interface UserMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_user
     *
     * @mbggenerated
     */
    @Delete({
        "delete from sys_user",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_user
     *
     * @mbggenerated
     */
    @Insert({
        "insert into sys_user (id, user_code, ",
        "user_name, user_password, ",
        "org_id, org_name, ",
        "user_fid, user_fname, ",
        "phone, email, is_system, ",
        "is_remove, last_login_time, ",
        "last_login_ip, cut_off_date, ",
        "create_time, create_user, ",
        "update_time, update_user, ",
        "is_enabled, is_account_non_expired, ",
        "is_account_nonL_locked, is_credentials_non_expired, ",
        "card_id, name_eng, ",
        "phone_2, msm_1, msm_2, ",
        "alppha_cd, sex, age, ",
        "work_years, comment_1, ",
        "comment_2, create_op, ",
        "update_op)",
        "values (#{id,jdbcType=VARCHAR}, #{userCode,jdbcType=VARCHAR}, ",
        "#{userName,jdbcType=VARCHAR}, #{userPassword,jdbcType=VARCHAR}, ",
        "#{orgId,jdbcType=VARCHAR}, #{orgName,jdbcType=VARCHAR}, ",
        "#{userFid,jdbcType=VARCHAR}, #{userFname,jdbcType=VARCHAR}, ",
        "#{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{isSystem,jdbcType=CHAR}, ",
        "#{isRemove,jdbcType=CHAR}, #{lastLoginTime,jdbcType=TIMESTAMP}, ",
        "#{lastLoginIp,jdbcType=VARCHAR}, #{cutOffDate,jdbcType=DATE}, ",
        "#{createTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=VARCHAR}, ",
        "#{updateTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR}, ",
        "#{isEnabled,jdbcType=VARCHAR}, #{isAccountNonExpired,jdbcType=VARCHAR}, ",
        "#{isAccountNonlLocked,jdbcType=VARCHAR}, #{isCredentialsNonExpired,jdbcType=VARCHAR}, ",
        "#{cardId,jdbcType=VARCHAR}, #{nameEng,jdbcType=VARCHAR}, ",
        "#{phone2,jdbcType=VARCHAR}, #{msm1,jdbcType=VARCHAR}, #{msm2,jdbcType=VARCHAR}, ",
        "#{alpphaCd,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, ",
        "#{workYears,jdbcType=INTEGER}, #{comment1,jdbcType=VARCHAR}, ",
        "#{comment2,jdbcType=VARCHAR}, #{createOp,jdbcType=VARCHAR}, ",
        "#{updateOp,jdbcType=VARCHAR})"
    })
    int insert(User record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_user
     *
     * @mbggenerated
     */
    int insertSelective(User record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_user
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "id, user_code, user_name, user_password, org_id, org_name, user_fid, user_fname, ",
        "phone, email, is_system, is_remove, last_login_time, last_login_ip, cut_off_date, ",
        "create_time, create_user, update_time, update_user, is_enabled, is_account_non_expired, ",
        "is_account_nonL_locked, is_credentials_non_expired, card_id, name_eng, phone_2, ",
        "msm_1, msm_2, alppha_cd, sex, age, work_years, comment_1, comment_2, create_op, ",
        "update_op",
        "from sys_user",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    @ResultMap("BaseResultMap")
    User selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_user
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(User record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_user
     *
     * @mbggenerated
     */
    @Update({
        "update sys_user",
        "set user_code = #{userCode,jdbcType=VARCHAR},",
          "user_name = #{userName,jdbcType=VARCHAR},",
          "user_password = #{userPassword,jdbcType=VARCHAR},",
          "org_id = #{orgId,jdbcType=VARCHAR},",
          "org_name = #{orgName,jdbcType=VARCHAR},",
          "user_fid = #{userFid,jdbcType=VARCHAR},",
          "user_fname = #{userFname,jdbcType=VARCHAR},",
          "phone = #{phone,jdbcType=VARCHAR},",
          "email = #{email,jdbcType=VARCHAR},",
          "is_system = #{isSystem,jdbcType=CHAR},",
          "is_remove = #{isRemove,jdbcType=CHAR},",
          "last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},",
          "last_login_ip = #{lastLoginIp,jdbcType=VARCHAR},",
          "cut_off_date = #{cutOffDate,jdbcType=DATE},",
          "create_time = #{createTime,jdbcType=TIMESTAMP},",
          "create_user = #{createUser,jdbcType=VARCHAR},",
          "update_time = #{updateTime,jdbcType=TIMESTAMP},",
          "update_user = #{updateUser,jdbcType=VARCHAR},",
          "is_enabled = #{isEnabled,jdbcType=VARCHAR},",
          "is_account_non_expired = #{isAccountNonExpired,jdbcType=VARCHAR},",
          "is_account_nonL_locked = #{isAccountNonlLocked,jdbcType=VARCHAR},",
          "is_credentials_non_expired = #{isCredentialsNonExpired,jdbcType=VARCHAR},",
          "card_id = #{cardId,jdbcType=VARCHAR},",
          "name_eng = #{nameEng,jdbcType=VARCHAR},",
          "phone_2 = #{phone2,jdbcType=VARCHAR},",
          "msm_1 = #{msm1,jdbcType=VARCHAR},",
          "msm_2 = #{msm2,jdbcType=VARCHAR},",
          "alppha_cd = #{alpphaCd,jdbcType=VARCHAR},",
          "sex = #{sex,jdbcType=VARCHAR},",
          "age = #{age,jdbcType=INTEGER},",
          "work_years = #{workYears,jdbcType=INTEGER},",
          "comment_1 = #{comment1,jdbcType=VARCHAR},",
          "comment_2 = #{comment2,jdbcType=VARCHAR},",
          "create_op = #{createOp,jdbcType=VARCHAR},",
          "update_op = #{updateOp,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(User record);
}