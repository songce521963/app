package com.ltkj.app.common.dao;

import com.ltkj.app.common.model.RuExecution;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;

public interface RuExecutionMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table act_ru_execution
     *
     * @mbggenerated
     */
    @Delete({
        "delete from act_ru_execution",
        "where ID_ = #{id,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table act_ru_execution
     *
     * @mbggenerated
     */
    @Insert({
        "insert into act_ru_execution (ID_, REV_, ",
        "PROC_INST_ID_, BUSINESS_KEY_, ",
        "PARENT_ID_, PROC_DEF_ID_, ",
        "SUPER_EXEC_, ACT_ID_, ",
        "IS_ACTIVE_, IS_CONCURRENT_, ",
        "IS_SCOPE_, IS_EVENT_SCOPE_, ",
        "SUSPENSION_STATE_, CACHED_ENT_STATE_, ",
        "TENANT_ID_, NAME_, ",
        "LOCK_TIME_)",
        "values (#{id,jdbcType=VARCHAR}, #{rev,jdbcType=INTEGER}, ",
        "#{procInstId,jdbcType=VARCHAR}, #{businessKey,jdbcType=VARCHAR}, ",
        "#{parentId,jdbcType=VARCHAR}, #{procDefId,jdbcType=VARCHAR}, ",
        "#{superExec,jdbcType=VARCHAR}, #{actId,jdbcType=VARCHAR}, ",
        "#{isActive,jdbcType=TINYINT}, #{isConcurrent,jdbcType=TINYINT}, ",
        "#{isScope,jdbcType=TINYINT}, #{isEventScope,jdbcType=TINYINT}, ",
        "#{suspensionState,jdbcType=INTEGER}, #{cachedEntState,jdbcType=INTEGER}, ",
        "#{tenantId,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, ",
        "#{lockTime,jdbcType=TIMESTAMP})"
    })
    int insert(RuExecution record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table act_ru_execution
     *
     * @mbggenerated
     */
    int insertSelective(RuExecution record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table act_ru_execution
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "ID_, REV_, PROC_INST_ID_, BUSINESS_KEY_, PARENT_ID_, PROC_DEF_ID_, SUPER_EXEC_, ",
        "ACT_ID_, IS_ACTIVE_, IS_CONCURRENT_, IS_SCOPE_, IS_EVENT_SCOPE_, SUSPENSION_STATE_, ",
        "CACHED_ENT_STATE_, TENANT_ID_, NAME_, LOCK_TIME_",
        "from act_ru_execution",
        "where ID_ = #{id,jdbcType=VARCHAR}"
    })
    @ResultMap("BaseResultMap")
    RuExecution selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table act_ru_execution
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(RuExecution record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table act_ru_execution
     *
     * @mbggenerated
     */
    @Update({
        "update act_ru_execution",
        "set REV_ = #{rev,jdbcType=INTEGER},",
          "PROC_INST_ID_ = #{procInstId,jdbcType=VARCHAR},",
          "BUSINESS_KEY_ = #{businessKey,jdbcType=VARCHAR},",
          "PARENT_ID_ = #{parentId,jdbcType=VARCHAR},",
          "PROC_DEF_ID_ = #{procDefId,jdbcType=VARCHAR},",
          "SUPER_EXEC_ = #{superExec,jdbcType=VARCHAR},",
          "ACT_ID_ = #{actId,jdbcType=VARCHAR},",
          "IS_ACTIVE_ = #{isActive,jdbcType=TINYINT},",
          "IS_CONCURRENT_ = #{isConcurrent,jdbcType=TINYINT},",
          "IS_SCOPE_ = #{isScope,jdbcType=TINYINT},",
          "IS_EVENT_SCOPE_ = #{isEventScope,jdbcType=TINYINT},",
          "SUSPENSION_STATE_ = #{suspensionState,jdbcType=INTEGER},",
          "CACHED_ENT_STATE_ = #{cachedEntState,jdbcType=INTEGER},",
          "TENANT_ID_ = #{tenantId,jdbcType=VARCHAR},",
          "NAME_ = #{name,jdbcType=VARCHAR},",
          "LOCK_TIME_ = #{lockTime,jdbcType=TIMESTAMP}",
        "where ID_ = #{id,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(RuExecution record);
}