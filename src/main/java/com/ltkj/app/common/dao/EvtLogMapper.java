package com.ltkj.app.common.dao;

import com.ltkj.app.common.model.EvtLog;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;

public interface EvtLogMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table act_evt_log
     *
     * @mbggenerated
     */
    @Delete({
        "delete from act_evt_log",
        "where LOG_NR_ = #{logNr,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long logNr);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table act_evt_log
     *
     * @mbggenerated
     */
    @Insert({
        "insert into act_evt_log (LOG_NR_, TYPE_, ",
        "PROC_DEF_ID_, PROC_INST_ID_, ",
        "EXECUTION_ID_, TASK_ID_, ",
        "TIME_STAMP_, USER_ID_, ",
        "LOCK_OWNER_, LOCK_TIME_, ",
        "IS_PROCESSED_, DATA_)",
        "values (#{logNr,jdbcType=BIGINT}, #{type,jdbcType=VARCHAR}, ",
        "#{procDefId,jdbcType=VARCHAR}, #{procInstId,jdbcType=VARCHAR}, ",
        "#{executionId,jdbcType=VARCHAR}, #{taskId,jdbcType=VARCHAR}, ",
        "#{timeStamp,jdbcType=TIMESTAMP}, #{userId,jdbcType=VARCHAR}, ",
        "#{lockOwner,jdbcType=VARCHAR}, #{lockTime,jdbcType=TIMESTAMP}, ",
        "#{isProcessed,jdbcType=TINYINT}, #{data,jdbcType=LONGVARBINARY})"
    })
    int insert(EvtLog record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table act_evt_log
     *
     * @mbggenerated
     */
    int insertSelective(EvtLog record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table act_evt_log
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "LOG_NR_, TYPE_, PROC_DEF_ID_, PROC_INST_ID_, EXECUTION_ID_, TASK_ID_, TIME_STAMP_, ",
        "USER_ID_, LOCK_OWNER_, LOCK_TIME_, IS_PROCESSED_, DATA_",
        "from act_evt_log",
        "where LOG_NR_ = #{logNr,jdbcType=BIGINT}"
    })
    @ResultMap("ResultMapWithBLOBs")
    EvtLog selectByPrimaryKey(Long logNr);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table act_evt_log
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(EvtLog record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table act_evt_log
     *
     * @mbggenerated
     */
    @Update({
        "update act_evt_log",
        "set TYPE_ = #{type,jdbcType=VARCHAR},",
          "PROC_DEF_ID_ = #{procDefId,jdbcType=VARCHAR},",
          "PROC_INST_ID_ = #{procInstId,jdbcType=VARCHAR},",
          "EXECUTION_ID_ = #{executionId,jdbcType=VARCHAR},",
          "TASK_ID_ = #{taskId,jdbcType=VARCHAR},",
          "TIME_STAMP_ = #{timeStamp,jdbcType=TIMESTAMP},",
          "USER_ID_ = #{userId,jdbcType=VARCHAR},",
          "LOCK_OWNER_ = #{lockOwner,jdbcType=VARCHAR},",
          "LOCK_TIME_ = #{lockTime,jdbcType=TIMESTAMP},",
          "IS_PROCESSED_ = #{isProcessed,jdbcType=TINYINT},",
          "DATA_ = #{data,jdbcType=LONGVARBINARY}",
        "where LOG_NR_ = #{logNr,jdbcType=BIGINT}"
    })
    int updateByPrimaryKeyWithBLOBs(EvtLog record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table act_evt_log
     *
     * @mbggenerated
     */
    @Update({
        "update act_evt_log",
        "set TYPE_ = #{type,jdbcType=VARCHAR},",
          "PROC_DEF_ID_ = #{procDefId,jdbcType=VARCHAR},",
          "PROC_INST_ID_ = #{procInstId,jdbcType=VARCHAR},",
          "EXECUTION_ID_ = #{executionId,jdbcType=VARCHAR},",
          "TASK_ID_ = #{taskId,jdbcType=VARCHAR},",
          "TIME_STAMP_ = #{timeStamp,jdbcType=TIMESTAMP},",
          "USER_ID_ = #{userId,jdbcType=VARCHAR},",
          "LOCK_OWNER_ = #{lockOwner,jdbcType=VARCHAR},",
          "LOCK_TIME_ = #{lockTime,jdbcType=TIMESTAMP},",
          "IS_PROCESSED_ = #{isProcessed,jdbcType=TINYINT}",
        "where LOG_NR_ = #{logNr,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(EvtLog record);
}